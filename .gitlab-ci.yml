stages:
  - test

# Global default parameters set for all jobs unless overridden by job-specific
# configuration.
default:
  image: python:3.9-buster
  interruptible: true

# Global default variables set for all jobs unless overridden by job-specific
# configuration.
variables:
  LC_ALL: "C.UTF-8"
  LANG: "C.UTF-8"


###############################################################################
# Run Conditions
#

# Run rules to activate at the major junction points: merge requests, tag
# pipelines and branch pipelines for masters.
.run_automatically:
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: on_success
    - if: $CI_COMMIT_TAG
      when: on_success
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never  # explicit fail-exclude terminal condition.

# Rules for running
# TODO: When moving to enforcing forky workflow, this will not be necessary.
.run_on_masters:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success
    - when: never


###############################################################################
# Jobs -- Testing

.test_job_defaults:
  extends: .run_automatically
  stage: test
  tags:
    - linux
    - docker
    - test
    - smqtk
  before_script:
    - export PATH=${HOME}/.local/bin:${PATH}
    - pip install --user -U poetry
    - command -v python
    - python --version
    - command -v pip
    - pip --version
    - command -v poetry
    - poetry -V
    - poetry install

test:docs_build:
  extends: .test_job_defaults
  script:
    - cd docs
    - poetry run make html
    - stat _build/html/index.html

test:lint:
  extends: .test_job_defaults
  script:
    - poetry run flake8

test:typecheck:
  extends: .test_job_defaults
  script:
    - poetry run mypy

test:unittests:
  extends: .test_job_defaults
  parallel:
    matrix:
      - IMAGE: [
          "python:3.6-buster",
          "python:3.7-buster",
          "python:3.8-buster",
          "python:3.9-buster"
        ]
        # Extras for included, optional plugin support (space-separated lists)
        OPT_EXTRA: [
          "",  # no extras
          "sklearn",
        ]
  image: $IMAGE
  script:
    - |
      if [[ -n "$OPT_EXTRA" ]]
      then
        poetry install --extras "$OPT_EXTRA"
      fi
    - poetry run pytest --cov=smqtk_detection --cov-config=.pytest.coveragerc
